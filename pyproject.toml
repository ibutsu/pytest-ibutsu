[project]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Testing",
]
dependencies = [
  "attrs",
  "boto3",
  "cattrs",
  "ibutsu-client>3",
  "pytest",
]
description = "A plugin to sent pytest results to an Ibutsu server"
dynamic = ["version"]
license = "MIT"
maintainers = [{name = "Raoul Snyman"}, {name = "Dmitry Misharov"}, {name = "Mike Shriver"}]
name = "pytest-ibutsu"
readme = "README.rst"
requires-python = ">=3.11"

[project.urls]
Source = "https://github.com/ibutsu/pytest-ibutsu"
Tracker = "https://github.com/ibutsu/pytest-ibutsu/issues"


[dependency-groups]
test = [
  "pytest-xdist",
  "python-jose",
  "pytest-cov",
  "coverage[toml]",
]

[project.entry-points.pytest11]
ibutsu = "pytest_ibutsu.pytest_plugin"

[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling>=1.3.1",
  "hatch-vcs",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.hatch.build.targets.wheel]
packages = ["/src/pytest_ibutsu"]

[tool.hatch.envs.hatch-test]
extra-dependencies = ["pytest-ibutsu[test]"]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.11", "3.12", "3.13"]

[tool.uv]
default-groups = ["test"]

[tool.mypy]
# Enable strict mode for maximum type safety
strict = true

# Additional strict settings
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
no_implicit_reexport = true

# Override for third-party libraries
[[tool.mypy.overrides]]
module = ["ibutsu_client.*"]
ignore_missing_imports = true
follow_untyped_imports = true

# Override for tests directory - be more lenient with pytest functions
[[tool.mypy.overrides]]
module = ["tests.*"]
# Allow untyped function definitions for pytest functions
disallow_untyped_defs = false
# Allow incomplete type definitions in tests
disallow_incomplete_defs = false
# Don't require return type annotations for test functions
check_untyped_defs = false
# Allow untyped calls in tests for simplicity
disallow_untyped_calls = false
# Allow untyped decorators (common in pytest)
disallow_untyped_decorators = false

[tool.pytest.ini_options]
testpaths = ["tests"]
# Exclude source files from test collection to prevent model classes like IbutsuTestRun and IbutsuTestResult from being collected as test classes
addopts = "--ignore-glob=src/**"
# Only collect test classes from actual test files, not from imported modules
python_classes = ["Test*"]
python_files = ["test_*.py", "*_test.py"]

[tool.coverage.run]
source = ["src/pytest_ibutsu"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "TYPE_CHECKING",
]
show_missing = true
precision = 2
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
